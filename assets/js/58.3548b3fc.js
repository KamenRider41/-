(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{511:function(_,v,l){"use strict";l.r(v);var e=l(38),i=Object(e.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h1",{attrs:{id:"实习提问"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#实习提问"}},[_._v("#")]),_._v(" 实习提问 ⭐️")]),_._v(" "),l("div",{staticClass:"custom-block tip"},[l("p",{staticClass:"custom-block-title"},[_._v("以眼泪，以沉默！")]),_._v(" "),l("p",[_._v("今天的我康昨天的自己，")]),_._v(" "),l("p",[_._v("常常是...\n是")])]),_._v(" "),l("p"),l("div",{staticClass:"table-of-contents"},[l("ul",[l("li",[l("a",{attrs:{href:"#一月"}},[_._v("一月")]),l("ul",[l("li",[l("a",{attrs:{href:"#第一周"}},[_._v("第一周")])]),l("li",[l("a",{attrs:{href:"#第二周"}},[_._v("第二周")])]),l("li",[l("a",{attrs:{href:"#第三周"}},[_._v("第三周")])]),l("li",[l("a",{attrs:{href:"#第四周"}},[_._v("第四周")])]),l("li",[l("a",{attrs:{href:"#之后"}},[_._v("之后")])])])])])]),l("p"),_._v(" "),l("h2",{attrs:{id:"一月"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#一月"}},[_._v("#")]),_._v(" 一月")]),_._v(" "),l("h3",{attrs:{id:"第一周"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#第一周"}},[_._v("#")]),_._v(" 第一周")]),_._v(" "),l("h4",{attrs:{id:"_5-23"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-23"}},[_._v("#")]),_._v(" 5.23")]),_._v(" "),l("ul",[l("li",[_._v("✅1.微前端对我来说是一个新的概念，通过视频学习，感觉还是云里雾里，我可以简单地理解为，微前端就是组件化吗？\n"),l("ul",[l("li",[_._v("a.微前端和组件化并不相同，当然微前端也有组件化的封装、抽象的表现。")]),_._v(" "),l("li",[_._v("b.微前端主要解决的问题是业务代码的拆分，可以实现项目级别的独立开发/部署/维护，但是对用户角度来说，它们又是一个统一的应用。")]),_._v(" "),l("li",[_._v("c.微前端的概念是从后端的微服务发展来的。")]),_._v(" "),l("li",[_._v("d.微前端的实现：")])])]),_._v(" "),l("li",[_._v("不同的功能模块在不同的仓库，可以使用不同的技术栈，是不同的开发人员，部署在不同的服务器上。")]),_._v(" "),l("li",[_._v("有一个基座应用，负责进行不同子应用的切换、加载、卸载")]),_._v(" "),l("li",[_._v("最终对用户看来，只是一个整体的网站，和普通网站没有区别，但是实际上在切换页面的时候是不同的前端应用。")])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅2.今天看到了"),l("code",[_._v("******")]),_._v(",这个类比于vue的vuepress,这个"),l("code",[_._v("******")]),_._v("是对外开放的吗？还是只有内部人员可以使用,内部人员可以用来构建一个仓库开源吗？\n"),l("ul",[l("li",[_._v("代码和框架等一系列东西是不能对外开放的")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅3.代码仓库里有"),l("code",[_._v("********，**************，************")]),_._v("等等，"),l("strong",[_._v("mentor")]),_._v("觉得哪个代码库对我来说，优先级最高，我该先从哪个代码库入手？\n"),l("ul",[l("li",[_._v("某后台")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅4.为啥代码库使用的是"),l("code",[_._v("GitLab")]),_._v("，而没有使用大多数程序员用的"),l("code",[_._v("Github")]),_._v(",是安全问题吗？"),l("code",[_._v("GitLab")]),_._v("为啥更安全？\n"),l("ul",[l("li",[_._v("Gitlab 应该更多的面向企业用户，GitHub 则更多面向独立开发中/组织。Gitlab 可以私有化部署，对公司代码更加安全吧。")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅5.代码好像都用的"),l("code",[_._v("less")]),_._v("，我之前用过"),l("code",[_._v("scss")]),_._v(",看起来，两者没有什么区别？哪我们为什么选择了"),l("code",[_._v("less")]),_._v("呢？\n"),l("ul",[l("li",[_._v("使用 less 应该是历史原因，GIP 前端的项目主要通过 Jupiter 来初始化/开发，Jupiter 初始化的项目是 less。")])])])]),_._v(" "),l("h4",{attrs:{id:"_5-24"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-24"}},[_._v("#")]),_._v(" 5.24")]),_._v(" "),l("ul",[l("li",[_._v("✅1."),l("code",[_._v("rebase")]),_._v("和"),l("code",[_._v("merge")]),_._v("的区别?在工作中的使用场景？(个人理解:"),l("code",[_._v("merge")]),_._v("是把别人合并过去，"),l("code",[_._v("rebase")]),_._v("是把自己给别人)\n"),l("ul",[l("li",[_._v("为什么不用 merge 呢?")])])]),_._v(" "),l("li",[_._v("为了 push 新变更到远程仓库，你要做的就是包含远程仓库中最新变更。意思就是只要你的本地分支包含了远程分支（如 o/main）中的最新变更就可以了，至于具体是用 rebase 还是 merge，并没有限制。\n"),l("ul",[l("li",[_._v("那么既然没有规定限制，为何前面几节都在着重于 rebase 呢？为什么在操作远程分支时不喜欢用 merge 呢？")])])]),_._v(" "),l("li",[_._v("优点:Rebase 使你的提交树变得很干净, 所有的提交都在一条线上")]),_._v(" "),l("li",[_._v("缺点:Rebase 修改了提交树的历史\n"),l("ul",[l("li",[_._v("比如, 提交 C1 可以被 rebase 到 C3 之后。这看起来 C1 中的工作是在 C3 之后进行的，但实际上是在 C3 之前。\n一些开发人员喜欢保留提交历史，因此更偏爱 "),l("code",[_._v("merge")]),_._v("。而其他人（比如我自己）可能更喜欢干净的提交树，于是偏爱 "),l("code",[_._v("rebase")]),_._v("。仁者见仁，智者见智。 😄")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅2.在工作中除了"),l("code",[_._v("git commit")]),_._v("之外比较频繁使用的"),l("code",[_._v("Git")]),_._v("命令有哪些？"),l("code",[_._v("git switch")]),_._v("?"),l("code",[_._v("git revert")]),_._v("?"),l("code",[_._v("rebase -i")]),_._v("?\n"),l("ul",[l("li",[_._v("Checkout")]),_._v(" "),l("li",[_._v("Get pull")]),_._v(" "),l("li",[_._v("cherry-pick")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅3.提交一个"),l("code",[_._v("PR")]),_._v("的流程？\n"),l("ul",[l("li",[_._v("Checkout -b")]),_._v(" "),l("li",[_._v("Push")]),_._v(" "),l("li",[_._v("与工作流有关")]),_._v(" "),l("li",[_._v("切relist分支")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅4.有没有两个人在短时间内同时提交造成冲突的情况？比如，在A分支基础开发了B,C，B,C同时PR上来，冲突了咋解决？\n"),l("ul",[l("li",[_._v("推的晚吃亏...")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅5.工作会设置"),l("code",[_._v("git tag")]),_._v("吗？"),l("code",[_._v("git describe")]),_._v("有啥用？\n"),l("ul",[l("li",[_._v("不常用")]),_._v(" "),l("li",[_._v("组件库常用")])])])]),_._v(" "),l("h4",{attrs:{id:"_5-25"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-25"}},[_._v("#")]),_._v(" 5.25")]),_._v(" "),l("ul",[l("li",[_._v("✅1.网站名字左边的"),l("code",[_._v("logo")]),_._v("在哪里可以查看到源地址？\n"),l("ul",[l("li",[l("code",[_._v("vuepress")]),_._v("的话，要安装一个插件，配置"),l("code",[_._v("config")])]),_._v(" "),l("li",[_._v("正常我们在源代码元素中的"),l("code",[_._v("header")]),_._v("字段里面可以找到"),l("code",[_._v("icon")]),_._v("对应，就可以找到这个图标了")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅2.有类似"),l("code",[_._v("CME")]),_._v("的提交插件吗？\n"),l("ul",[l("li",[_._v("好用就行")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅3.我们会有性能相关的检测吗？F12还是用专门的站点？\n"),l("ul",[l("li",[l("code",[_._v("Tea")]),_._v("做数据埋点")]),_._v(" "),l("li",[l("code",[_._v("slardar")]),_._v("，记录每个用户的性能")])])])]),_._v(" "),l("h4",{attrs:{id:"_5-26"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-26"}},[_._v("#")]),_._v(" 5.26")]),_._v(" "),l("ul",[l("li",[_._v("✅"),l("code",[_._v("Mac")]),_._v("电脑的文件在哪里能够看到细节呢？比如我们获取"),l("code",[_._v(".ssh/id_rsa.pub")]),_._v("是用指令获取的，能通过文件夹去访问吗？之前都是用"),l("code",[_._v("windows")]),_._v("，没有掌控感，w有安全感。\n"),l("ul",[l("li",[_._v("配置"),l("code",[_._v("vscode")]),_._v("快捷键")]),_._v(" "),l("li",[_._v("使用编辑器")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅"),l("code",[_._v("RSA")]),_._v("算法是有名的非对称加密算法,公钥和私钥有一种可以转换的感觉(实际不可以？)，以绑定gitlab举例来说。\n"),l("ul",[l("li",[_._v("类似https连接")])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅开发中加密会用到"),l("code",[_._v("JWT")]),_._v("，"),l("code",[_._v("bcryptjs")]),_._v("这类插件吗？\n"),l("ul",[l("li",[l("code",[_._v("utils/encrypt.js")])])])])]),_._v(" "),l("hr"),_._v(" "),l("ul",[l("li",[_._v("✅配置"),l("code",[_._v("Kerberos")]),_._v(" "),l("ul",[l("li",[_._v("好像说配这个才能下载项目，但是我好像只配了"),l("code",[_._v("ssh")]),_._v("也拉到了项目")])])])]),_._v(" "),l("h4",{attrs:{id:"_5-27"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_5-27"}},[_._v("#")]),_._v(" 5.27")]),_._v(" "),l("ul",[l("li",[_._v("✅代码运行后，无法进入"),l("code",[_._v("Home")]),_._v("页,如何进行账号验证，或者有无测试账号？\n"),l("ul",[l("li",[l("code",[_._v("@byted/muye-novel-wap-sso")]),_._v("在哪里可以看到源码？")]),_._v(" "),l("li",[_._v("下载配置"),l("code",[_._v("Charles")]),_._v("，进行代理")])])]),_._v(" "),l("li",[_._v("参加飞书成长营")])]),_._v(" "),l("h3",{attrs:{id:"第二周"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#第二周"}},[_._v("#")]),_._v(" 第二周")]),_._v(" "),l("ul",[l("li",[_._v("lynx和h5的区别？为啥要换？")]),_._v(" "),l("li",[_._v("✅传递props的时候一般都会用useCallback和useMemo吗？\n"),l("ul",[l("li",[_._v("多写，比较复杂")])])]),_._v(" "),l("li",[_._v("✅()是"),l("code",[_._v("return {}")]),_._v("的缩写吗？\n"),l("ul",[l("li",[_._v("是的")])])]),_._v(" "),l("li",[_._v("✅在开发中如何去使用装饰器，会不会增加阅读成本呢？\n"),l("ul",[l("li",[_._v("babel")]),_._v(" "),l("li",[_._v("typescript")]),_._v(" "),l("li",[_._v("python")])])]),_._v(" "),l("li",[_._v("✅登录的状态保持是如何做的，自更新？cookie和token的权衡？结合怎么样？\n"),l("ul",[l("li",[_._v("项目中没太看明白")]),_._v(" "),l("li",[_._v("sdk-cookie")])])]),_._v(" "),l("li",[_._v("✅代码规范\n"),l("ul",[l("li",[_._v("props解构的地方等")])])])]),_._v(" "),l("h3",{attrs:{id:"第三周"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#第三周"}},[_._v("#")]),_._v(" 第三周")]),_._v(" "),l("ul",[l("li",[_._v("✅为什么要使用SCM\n"),l("ul",[l("li",[_._v("git代码管理")]),_._v(" "),l("li",[_._v("scm发布(cdn)")])])]),_._v(" "),l("li",[_._v("✅如果在多个平台发小说呢？如何处理这种情况？")]),_._v(" "),l("li",[_._v("✅本地可以使用，但是发布插件后，使用会报错Vue\n"),l("ul",[l("li",[_._v("依赖的版本不同")]),_._v(" "),l("li",[_._v("打包出错")]),_._v(" "),l("li",[_._v("React有类似slot的写法吗？\n"),l("ul",[l("li",[_._v("可以自己手动实现")])])])])]),_._v(" "),l("li",[_._v("✅一般如何去测试一个组件呢，单独开一个路由吗？\n"),l("ul",[l("li",[_._v("之前会习惯单独开一个test路由")])])]),_._v(" "),l("li",[_._v("✅Gitlab的仓库私有如何公开？")]),_._v(" "),l("li",[_._v("✅!import的解决方案")]),_._v(" "),l("li",[_._v("✅React组件库搭建视频资源比较少")]),_._v(" "),l("li",[_._v("✅如何打包 图标库?\n"),l("ul",[l("li",[_._v("类似阿里巴巴矢量图标库？")])])]),_._v(" "),l("li",[_._v("✅ref的作用\n"),l("ul",[l("li",[_._v("获取原生DOM 引用")]),_._v(" "),l("li",[_._v("父组件调用子组件的内部属性/方法")]),_._v(" "),l("li",[_._v("如果一个非原生 DOM 支持 ref 属性，那就要看它的文档，这个ref 暴露了什么 API")])])])]),_._v(" "),l("h3",{attrs:{id:"第四周"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#第四周"}},[_._v("#")]),_._v(" 第四周")]),_._v(" "),l("ul",[l("li",[_._v("✅一个小TIP：如果还没开发完，只是想提一个 MR 方便其他人 review，可以再 MR 标题前边加个前缀   WIP:   ，带有 这个前缀的不能被合并")]),_._v(" "),l("li",[_._v("✅如何埋点？")]),_._v(" "),l("li",[_._v("✅"),l("code",[_._v("Goofy`` 主要发布纯前端项目，文学网是个")]),_._v("Node"),l("code",[_._v("项目 目前")]),_._v("Node"),l("code",[_._v("主要是在")]),_._v(" TCE"),l("code",[_._v("不在")]),_._v(" Goofy"),l("code",[_._v("上，")]),_._v("TCE"),l("code",[_._v("发布流程和")]),_._v("Goofy` 不一样")]),_._v(" "),l("li",[_._v("✅为啥文学网不是纯前端，哪里用到了"),l("code",[_._v("Node")]),_._v(" "),l("ul",[l("li",[_._v("服务端渲染等")])])]),_._v(" "),l("li",[_._v("✅"),l("code",[_._v("vscode")]),_._v("-flutter的热启动怎么弄\n"),l("ul",[l("li",[_._v("只能flutter run启动...")])])])]),_._v(" "),l("h3",{attrs:{id:"之后"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#之后"}},[_._v("#")]),_._v(" 之后")]),_._v(" "),l("ul",[l("li",[_._v("✅case评审时间很长，但是和文档内容差不多?\n"),l("ul",[l("li",[_._v("统一，后面可能和文档不一样")])])]),_._v(" "),l("li",[_._v("Flutter经常用诊断树吗？如何调试呢？")]),_._v(" "),l("li",[_._v("业务质量跟进如何去做？")]),_._v(" "),l("li",[_._v("如何使用slarda")])])])}),[],!1,null,null,null);v.default=i.exports}}]);