(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{481:function(t,a,s){"use strict";s.r(a);var e=s(38),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"杂项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#杂项"}},[t._v("#")]),t._v(" 杂项")]),t._v(" "),s("p",[t._v("提交训练！\n")]),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#提交的技巧-1"}},[t._v("提交的技巧#1")])]),s("li",[s("a",{attrs:{href:"#提交的技巧-2"}},[t._v("提交的技巧#2")])]),s("li",[s("a",{attrs:{href:"#git-tags"}},[t._v("Git Tags")])]),s("li",[s("a",{attrs:{href:"#get-describe"}},[t._v("Get Describe")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"提交的技巧-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交的技巧-1"}},[t._v("#")]),t._v(" 提交的技巧#1")]),t._v(" "),s("p",[t._v("你之前在 newImage 分支上进行了一次提交，然后又基于它创建了 caption 分支，然后又提交了一次。")]),t._v(" "),s("p",[t._v("此时你想对某个以前的提交记录进行一些小小的调整。比如设计师想修改一下 newImage 中图片的分辨率，尽管那个提交记录并不是最新的了。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ul",[s("li",[t._v("1.先用"),s("code",[t._v("git rebase -i")]),t._v("将提交重新排序，然后把我们想要修改的提交记录挪到最前")]),t._v(" "),s("li",[t._v("2.然后用"),s("code",[t._v("git commit --amend")]),t._v("来进行一些小修改")]),t._v(" "),s("li",[t._v("3.接着再用"),s("code",[t._v("git rebase -i")]),t._v("来将它们调回原来的顺序")]),t._v(" "),s("li",[t._v("4.最后我们把"),s("code",[t._v("main")]),t._v("移到修改的最前端，就大功告成了")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -f main caption\n")])])]),s("h2",{attrs:{id:"提交的技巧-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交的技巧-2"}},[t._v("#")]),t._v(" 提交的技巧#2")]),t._v(" "),s("p",[t._v("正如你在上一关所见到的，我们可以使用 "),s("code",[t._v("rebase -i")]),t._v(" 对提交记录进行重新排序。只要把我们想要的提交记录挪到最前端，我们就可以很轻松的用 "),s("code",[t._v("--amend")]),t._v(" 修改它，然后把它们重新排成我们想要的顺序。")]),t._v(" "),s("p",[t._v("但这样做就唯一的问题就是要进行两次排序，而这有可能造成由 "),s("code",[t._v("rebase")]),t._v(" 而导致的冲突。下面还是看看 "),s("code",[t._v("git cherry-pick")]),t._v(" 是怎么做的吧。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("和"),s("code",[t._v("#1")]),t._v("同样的要求,不用"),s("code",[t._v("rebase")]),t._v("试试")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout main\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick C2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -f main C1\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick C2 C3\n")])])]),s("h2",{attrs:{id:"git-tags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-tags"}},[t._v("#")]),t._v(" Git Tags")]),t._v(" "),s("p",[t._v("相信通过前面课程的学习你已经发现了：分支很容易被人为移动，并且当有新的提交时，它也会移动。分支很容易被改变，大部分分支还只是临时的，并且还一直在变。")]),t._v(" "),s("p",[t._v("你可能会问了：有没有什么可以永远指向某个提交记录的标识呢，比如软件发布新的大版本，或者是修正一些重要的 Bug 或是增加了某些新特性，有没有比分支更好的可以永远指向这些提交的方法呢？")]),t._v(" "),s("p",[s("code",[t._v("git tag v1 C1")]),t._v("我们将这个标签命名为 "),s("code",[t._v("v1")]),t._v("，并且明确地让它指向提交记录 "),s("code",[t._v("C1")]),t._v("，如果你不指定提交记录，Git 会用"),s("code",[t._v("HEAD")]),t._v("所指向的位置。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("建立两个标签，然后切换到"),s("code",[t._v("v1")]),t._v(",要注意你会进到分离"),s("code",[t._v("HEAD")]),t._v("的状态")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v0 C1\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1 C2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout C2\n")])])]),s("h2",{attrs:{id:"get-describe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-describe"}},[t._v("#")]),t._v(" Get Describe")]),t._v(" "),s("p",[t._v("由于标签在代码库中起着“锚点”的作用，Git 还为此专门设计了一个命令用来描述离你最近的锚点（也就是标签），它就是 "),s("code",[t._v("git describe")]),t._v("！")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" describe main\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出v1_2_gC2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最近的标签是v1，相隔2次提交，自身是C2")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=v.exports}}]);