(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{508:function(t,s,a){"use strict";a.r(s);var e=a(38),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试题二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题二"}},[t._v("#")]),t._v(" 面试题二 ⭐️")]),t._v(" "),a("h2",{attrs:{id:"_1-什么是事件代理-以及它的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是事件代理-以及它的应用场景"}},[t._v("#")]),t._v(" 1.什么是事件代理，以及它的应用场景")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看答案")]),t._v(" "),a("p",[t._v("事件委托，会把一个或者一组元素的事件委托到它的父层或者更外层元素上，真正绑定事件的是外层元素，而不是目标元素")]),t._v(" "),a("p",[t._v("当事件响应到目标元素上时，会通过事件冒泡机制从而触发它的外层元素的绑定事件上，然后在外层元素上去执行函数")])]),t._v(" "),a("h2",{attrs:{id:"_2-说说new操作符具体干了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-说说new操作符具体干了什么"}},[t._v("#")]),t._v(" 2.说说new操作符具体干了什么？")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看答案")]),t._v(" "),a("ul",[a("li",[t._v("创建一个新的对象obj")]),t._v(" "),a("li",[t._v("将对象与构建函数通过原型链连接起来")]),t._v(" "),a("li",[t._v("将构建函数中的this绑定到新建的对象obj上")]),t._v(" "),a("li",[t._v("根据构建函数返回类型作判断，如果是原始值则被忽略，如果是返回对象，需要正常处理")])]),t._v(" "),a("h4",{attrs:{id:"手写new操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写new操作符"}},[t._v("#")]),t._v(" 手写new操作符")]),t._v(" "),a("div",{staticClass:"language-JS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mynew")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.创建一个新对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.新对象原型指向构造函数原型对象")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const obj=Object.create(Func.prototype)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.将构建函数的this指向新对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.根据返回值判断")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-讲一下事件委托-target与currenttarget分别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-讲一下事件委托-target与currenttarget分别是什么"}},[t._v("#")]),t._v(" 3.讲一下事件委托,target与currentTarget分别是什么？")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看答案")]),t._v(" "),a("ul",[a("li",[t._v("event.target返回触发事件的元素")]),t._v(" "),a("li",[t._v("event.currentTarget返回绑定事件的元素")])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("addEventListener (type, listener[, useCapture]) 第三个参数如果是true，表示在事件捕获阶段调用事件处理程序；如果是false（不写默认就是false），表示在事件冒泡阶段电泳事件处理程序")]),t._v(" "),a("li",[t._v("事件委托的原理：不给每个子节点单独设置事件监听器，而是设置在其父节点上，然后利用冒泡原理设置每个子节点。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);