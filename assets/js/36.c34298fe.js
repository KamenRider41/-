(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{480:function(t,s,a){"use strict";a.r(s);var e=a(38),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"origin与它的周边"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#origin与它的周边"}},[t._v("#")]),t._v(" origin与它的周边")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#推送主分支"}},[t._v("推送主分支")])]),a("li",[a("a",{attrs:{href:"#合并远程仓库"}},[t._v("合并远程仓库")])]),a("li",[a("a",{attrs:{href:"#远程追踪"}},[t._v("远程追踪")])]),a("li",[a("a",{attrs:{href:"#git-push参数"}},[t._v("git push参数")])]),a("li",[a("a",{attrs:{href:"#git-push参数2"}},[t._v("git push参数2")])]),a("li",[a("a",{attrs:{href:"#git-fetch参数"}},[t._v("git fetch参数")])]),a("li",[a("a",{attrs:{href:"#没有source的source"}},[t._v("没有source的source")])]),a("li",[a("a",{attrs:{href:"#git-pull参数"}},[t._v("git pull参数")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"推送主分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推送主分支"}},[t._v("#")]),t._v(" 推送主分支")]),t._v(" "),a("p",[t._v("任务：")]),t._v(" "),a("ul",[a("li",[t._v("1.共有三个特性分支"),a("code",[t._v("side1")]),t._v(","),a("code",[t._v("side2")]),t._v(","),a("code",[t._v("side3")])]),t._v(" "),a("li",[t._v("2.我需要将这三分支按循序推送到远程仓库")]),t._v(" "),a("li",[t._v("3.因为远程仓库已经被更新过了，所以我们还要把哪些工作合并过来")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase o/main side1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase side1 side2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase side2 side3\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase side3 main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("h2",{attrs:{id:"合并远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并远程仓库"}},[t._v("#")]),t._v(" 合并远程仓库")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("为什么不用 merge 呢?")]),t._v(" "),a("ul",[a("li",[t._v("为了 push 新变更到远程仓库，你要做的就是包含远程仓库中最新变更。意思就是只要你的本地分支包含了远程分支（如 o/main）中的最新变更就可以了，至于具体是用 rebase 还是 merge，并没有限制。")])])]),t._v(" "),a("li",[a("p",[t._v("那么既然没有规定限制，为何前面几节都在着重于 rebase 呢？为什么在操作远程分支时不喜欢用 merge 呢？")]),t._v(" "),a("ul",[a("li",[t._v("优点:Rebase 使你的提交树变得很干净, 所有的提交都在一条线上")]),t._v(" "),a("li",[t._v("缺点:Rebase 修改了提交树的历史")])])])]),t._v(" "),a("p",[t._v("比如, 提交 C1 可以被 rebase 到 C3 之后。这看起来 C1 中的工作是在 C3 之后进行的，但实际上是在 C3 之前。\n一些开发人员喜欢保留提交历史，因此更偏爱 merge。而其他人（比如我自己）可能更喜欢干净的提交树，于是偏爱 rebase。仁者见仁，智者见智。 😄")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge side1\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge side2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge side3\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n")])])]),a("h2",{attrs:{id:"远程追踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程追踪"}},[t._v("#")]),t._v(" 远程追踪")]),t._v(" "),a("ul",[a("li",[t._v("1."),a("code",[t._v("git checkout -b foo o/main;git pull")]),t._v("正如你所看到的, 我们使用了隐含的目标 o/main 来更新 "),a("code",[t._v("foo")]),t._v(" 分支。需要注意的是 "),a("code",[t._v("main")]),t._v(" 并未被更新！")]),t._v(" "),a("li",[t._v("2."),a("code",[t._v("git branch -u o/main foo")]),t._v("这样"),a("code",[t._v("foo")]),t._v("就会跟踪"),a("code",[t._v("o/main")]),t._v("如果当前就在"),a("code",[t._v("foo")]),t._v("分支上, 还可以省略 "),a("code",[t._v("foo")]),t._v(":"),a("code",[t._v("git branch -u o/main")]),t._v("\n相比之下，第二个命令更明确")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b side o/main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),a("h2",{attrs:{id:"git-push参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push参数"}},[t._v("#")]),t._v(" git push参数")]),t._v(" "),a("p",[a("code",[t._v("git push origin master")])]),t._v(" "),a("ul",[a("li",[t._v("把这个命令翻译过来就是：\n"),a("ul",[a("li",[t._v("切到本地仓库中的“main”分支，获取所有的提交，再到远程仓库“origin”中找到“main”分支，将远程仓库中没有的提交记录都添加上去，搞定之后告诉我。")])])])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("任务:本官我们要更新远程仓库中的"),a("code",[t._v("foo")]),t._v("和"),a("code",[t._v("main")]),t._v("，但是"),a("code",[t._v("git checkout")]),t._v("被禁用了")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin foo\n")])])]),a("h2",{attrs:{id:"git-push参数2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-push参数2"}},[t._v("#")]),t._v(" git push参数2")]),t._v(" "),a("p",[a("code",[t._v(":")]),t._v("冒号前添加的表示一个位置，提交到哪里的意思")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin foo:main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin main^:foo\n")])])]),a("h2",{attrs:{id:"git-fetch参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch参数"}},[t._v("#")]),t._v(" git fetch参数")]),t._v(" "),a("p",[t._v("和上面是相同的，只是目标和出发地相反")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin main^:foo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin foo:main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout foo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge master\n")])])]),a("h2",{attrs:{id:"没有source的source"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有source的source"}},[t._v("#")]),t._v(" 没有source的source")]),t._v(" "),a("p",[t._v("Git 有两种关于 "),a("code",[t._v("<source>")]),t._v(" 的用法是比较诡异的，即你可以在 "),a("code",[t._v("git push")]),t._v(" 或 "),a("code",[t._v("git fetch")]),t._v(" 时不指定任何 "),a("code",[t._v("source")]),t._v("，方法就是仅保留冒号和 "),a("code",[t._v("destination")]),t._v(" 部分，source 部分留空。")]),t._v(" "),a("p",[t._v("没有会创建，有会删除，真的很神奇")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin :bar\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :foo\n")])])]),a("h2",{attrs:{id:"git-pull参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-pull参数"}},[t._v("#")]),t._v(" git pull参数")]),t._v(" "),a("p",[a("code",[t._v("git pull")]),t._v("参数和"),a("code",[t._v("fetch")]),t._v("是相同的，只是多了一个"),a("code",[t._v("merge")]),t._v("操作")]),t._v(" "),a("p",[a("code",[t._v("git pull origin main:foo")])]),t._v(" "),a("ul",[a("li",[t._v("哇, 这个命令做的事情真多。它先在本地创建了一个叫 "),a("code",[t._v("foo")]),t._v(" 的分支，从远程仓库中的 "),a("code",[t._v("main")]),t._v(" 分支中下载提交记录，并合并到 "),a("code",[t._v("foo")]),t._v("，然后再 "),a("code",[t._v("merge")]),t._v(" 到我们的当前检出的分支 "),a("code",[t._v("bar")]),t._v(" 上。操作够多的吧？！")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin bar:foo\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin main:side\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);